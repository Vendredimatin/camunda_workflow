spring.jpa.hibernate.ddl-auto=update
datasource.ip=127.0.0.1
datasource.port=5432
datasource.database=dataway
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/dataway?autosave=conservative
spring.datasource.username=postgres
spring.datasource.password=123456

spring.mvc.throw-exception-if-no-handler-found=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB
spring.jackson.default-property-inclusion=non_null

# log
logging.level.io.swagger.models.parameters : ERROR
logging.config=classpath:logback-spring.xml
logHome=/opt/dwf3.0-deploy/log
scriptLogPrefix=script
print-rest-invoke-log=true

# swagger host配置
swagger.host.app=
swagger.host.modeler=
swagger.host.monitor=

# Custom properties
admin.name=admin
modeller.name=modeller
admin.password=123456
modeller.password=123456

# deploy properties
pgPath=/usr/lib/postgresql/10/bin
tomcatPath=/opt/apache-tomcat
tomcatPort=8180
deployPath=/opt/dwf3.0-deploy
app.server.port=9090
modeler.server.port=6060
monitor.server.port=7070

# auth
auth.provider=edu.thss.platform.security.jwt.JwtAuthenticationProvider
auth.tokenprocessor=edu.thss.platform.security.jwt.JwtTokenProcessorImpl
#auth.provider=edu.thss.platform.security.tianyuan.TianYuanAuthenticationProvider
#auth.tokenprocessor=edu.thss.platform.security.tianyuan.TianYuanTokenProcessorImpl
auth.params.username=username
auth.params.password=password

port=5432
password=123456
host=127.0.0.1
dbName=dataway
userName=postgres
addinPath=/opt/dwf3.0-deploy/dwf_sdk/assemble/addins
staticPrefix=http://127.0.0.1:8180/static
staticPath=/opt/dwf3.0-deploy/static
shPath=/opt/dwf3.0-deploy/dwf_sdk/assemble/addins/server.py
logPath=/opt/dwf3.0-deploy
ipList="localhost;127.0.0.1;127.0.1.1;dwf;192.168.10.81;192.168.10.92"
codePath=/opt/apache-tomcat/webapps/code
nodePath=/opt/dwf3.0-deploy/dwf_sdk/assemble/addins/single
scriptPath=/opt/dwf3.0-deploy/dwf_sdk/assemble/addins/handle.py
partPath=/opt/dwf3.0-deploy/dwf_sdk/parts
sdkPath=/opt/dwf3.0-deploy/dwf_sdk/sdk
assembleLogPath=/opt/dwf3.0-deploy/dwf_sdk/assemble/log
tmpPath=/opt/dwf3.0-deploy/_tmp

# local file data model plugin
data-model.plugin.repository.path=/opt/dwf3.0-deploy/file-repository
data-model.plugin.iotdb.ip=127.0.0.1
data-model.plugin.iotdb.port=6667
data-model.plugin.iotdb.username=root
data-model.plugin.iotdb.password=root
data-model.plugin.iotdb.querylimit=
multi-file.root=
omf.querylimit=1000

# external configs (should start with "external.appConfig.")
external.appConfig.demoKey=demoValue
external.appConfig.demoKey.with.dots=value
external.appConfig.maxFileSizeKb=512000
external.appConfig.roleGroup=

#-----------------------------------------------
# Cloud iBPM build time data storage (repository).
# Configuration: MySQL
# jdbc driver package installed.
db.product=Postgresql
db.jdbc.driverClassName=org.postgresql.Driver
# local host
# 初始化数据库连接为2
db.jdbc.initialSize=10
# 超时等待时间以毫秒为单位 60000毫秒/1000等于60秒
db.jdbc.maxWait=10000
# 最大连接数量
db.jdbc.maxActive=10
# 最大空闲连接数
db.jdbc.maxIdle=10
# 最小空闲连接数
db.jdbc.minIdle=3
# 是否在自动回收超时连接的时候打印连接的超时错误
db.jdbc.logAbandoned=true
# 是否自动回收超时连接
db.jdbc.removeAbandoned=true
# 超时时间(以秒数为单位)
db.jdbc.removeAbandonedTimeout=10
db.jdbc.poolPreparedStatements=true
db.jdbc.testOnBorrow=true
# db.jdbc.validationQuery=SELECT 1 FROM DUAL
db.jdbc.validationQuery=select version()

# Cloud iBPM file storage.
# win: files are stored in hard disk on Windows server;
# linux: files are stored in hard disk on Linux server;
# amazon: files are stored on AWS S3;
# ali: files are stored on Ali cloud;
filestorage.type=win
# if storage type is win, files will be stored in C:/CloudiBPM/ by default;
# if storage type is linux, files will be stored in /var/www/CloudiBPM/ by default;
# if storage type is amazon, files will be stored in a bucket CloudiBPM/ on S3 by default;
# if storage type is ali, files will be stored in ???? by default;
linux.filestorage.lib=/home/cdh/xq/org
windows.filestorage.lib=D:/data/org
aliyun.filestorage.lib=S3
# external name list, format: extnames=jar;rar;zip;war; etc.
extnames=jar;properties;xml;txt;

#----------------------------------------
# administrator company ID, e.g., Xuan QI Company ID
admin.corp.id=00000000000001R

#----------------------------------------
# server entity ID cache
server.cache.entityId.size=200
server.cache.entityCode.size=10
server.cache.entityVersion.size=5
# server log pool cache
server.cache.log.batchSave.size=1

#-----------------------------------------
# File server info
#file.server.domainname=http://localhost:8080/file/
file.server.domainname=http://101.200.154.42:8080/file/
# API server info
api.server.domainname=http://192.168.1.81:6060
#api.server.domainname=http://localhost:6060
#api.server.domainname=http://localhost:8088/api/

# 1: standalone;
# 2: private cloud;
# 3: public cloud;
xq.product.pversion=1

# auth
dwf.cache.org.tree = false


